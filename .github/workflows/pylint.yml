name: Pylint

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.10"]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install --user poetry
        poetry config virtualenvs.in-project true
        poetry install --no-root
        
    - name: Lint
      run: |
        poetry run black --check hypermesh_lattice_mesher
        poetry run flake8 hypermesh_lattice_mesher --exclude .hypermesh_lattice_mesher/data --count --max-complexity=10 --max-line-length=127
        poetry run pylint hypermesh_lattice_mesher
        
    - name: test code
      run: |
        poetry run pytest \
        --cov-report html:cov_html \
        --cov-report term:skip-covered \
        --cov=hypermesh_lattice_mesher
