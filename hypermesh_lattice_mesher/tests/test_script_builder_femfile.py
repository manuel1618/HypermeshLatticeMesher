from textwrap import dedent
import unittest
from unittest.mock import mock_open, patch
from hypermesh_lattice_mesher.datastructure.elements import Element1D
from hypermesh_lattice_mesher.exporter.script_builder_femfile import (
    ScriptBuilderFEMFile,
)
from hypermesh_lattice_mesher.importer.fem_file_reader import FEMFileReader


class TestSciptBuilderTCL(unittest.TestCase):

    DATA_SIMPLE_FEMFILE = dedent(
        """
    $$
    $$ Optistruct Input Deck Generated by HyperMesh Version  : 2022.0.0.33
    $$ Generated using HyperMesh-Optistruct Template Version : 2022.0.0.33
    $$
    $$   Template:  optistruct
    $$
    $$
    $$ optistruct
    $
    SYSSETTING(SKIP10FIELD=CHECK)
    $$------------------------------------------------------------------------------$
    $$                      Case Control Cards                                      $
    $$------------------------------------------------------------------------------$
    $$--------------------------------------------------------------
    $$ HYPERMESH TAGS 
    $$--------------------------------------------------------------
    $$BEGIN TAGS
    $$END TAGS
    $
    BEGIN BULK
    $$
    $$  Stacking Information for Ply-Based Composite Definition
    $$

    $$
    $$  GRID Data
    $$
    GRID,1,,-10.313008308411,-7.0365853309631,-45.275356292725,
    GRID,2,,-10.313008308411,-7.0365853309631,-35.275356292725,
    $$
    $$  CHEXA Elements: First Order
    $$       
    $HMCOMP ID                     1
    CHEXA,31,0,25,28,23,24,45,46,
    +,47,48,
    CHEXA,32,0,45,46,47,48,49,50,
    +,51,52,
    $
    $$
    $$------------------------------------------------------------------------------$
    $$    HyperMesh name and color information for generic components               $
    $$------------------------------------------------------------------------------$
    $HMNAME COMP                   1"auto1" 
    $HWCOLOR COMP                  1       5
    $

    $

    $
    $$
    $$------------------------------------------------------------------------------$
    $$ HyperMesh Commands for loadcollectors name and color information $
    $$------------------------------------------------------------------------------$
    ENDDATA
    $$
    $$------------------------------------------------------------------------------$$
    $$        Data Definition for AutoDV                                            $$
    $$------------------------------------------------------------------------------$$
    $$
    $$-----------------------------------------------------------------------------$$
    $$        Design Variables Card for Control Perturbations                      $$
    $$-----------------------------------------------------------------------------$$
    $$
    $$------------------------------------------------------------------------------$
    $$        Domain Element Definitions                                            $
    $$------------------------------------------------------------------------------$
    $$
    $$------------------------------------------------------------------------------$$
    $$            Control Perturbation                                              $$
    $$------------------------------------------------------------------------------$$
    """
    ).strip()

    @patch("builtins.open", mock_open(read_data=DATA_SIMPLE_FEMFILE))
    def test_delete_old_content(self):
        reader = FEMFileReader("")
        builder = ScriptBuilderFEMFile(reader)
        number_lines_before = len(builder.fem_file_lines_3D)
        number_lines_after = len(builder.fem_file_lines_3D_reduced)
        assert number_lines_after - number_lines_before == -7

    @patch("builtins.open", mock_open(read_data=DATA_SIMPLE_FEMFILE))
    def test_write_nodes_elements(self):
        reader = FEMFileReader("")
        builder = ScriptBuilderFEMFile(reader)
        builder.insert_lattice_data_and_export("")
        assert len(Element1D.elements) > 0
